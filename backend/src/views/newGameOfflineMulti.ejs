<!-- newGameOfflineMulti.ejs -->
<div class="flex flex-col items-center">
	<h1 class="text-3xl font-bold mb-4">Offline Multi-Player Pong</h1>
	<canvas id="multiGameCanvas" width="800" height="600" class="border-4 border-white"></canvas>
	<p class="mt-4">Player 1: Use W/S keys | Player 2: Use Up/Down arrow keys</p>
  </div>
  
  <script>
	const canvas = document.getElementById('multiGameCanvas');
	const ctx = canvas.getContext('2d');
  
	const PADDLE_WIDTH = 10, PADDLE_HEIGHT = 100;
	let player1Y = 250, player2Y = 250;
	let ballX = canvas.width / 2, ballY = canvas.height / 2;
	let ballSpeedX = 5, ballSpeedY = 3;
	const BALL_RADIUS = 8;
  
	// Listen for keyboard events for two-player control
	document.addEventListener('keydown', evt => {
	  switch (evt.key) {
		case 'w':
		case 'W':
		  player1Y -= 20;
		  break;
		case 's':
		case 'S':
		  player1Y += 20;
		  break;
		case 'ArrowUp':
		  player2Y -= 20;
		  break;
		case 'ArrowDown':
		  player2Y += 20;
		  break;
	  }
	});
  
	function gameLoop() {
	  update();
	  draw();
	  requestAnimationFrame(gameLoop);
	}
  
	function update() {
	  ballX += ballSpeedX;
	  ballY += ballSpeedY;
	  if (ballY < 0 || ballY > canvas.height) ballSpeedY = -ballSpeedY;
  
	  // Collision with left paddle (Player 1)
	  if (ballX < PADDLE_WIDTH) {
		if (ballY > player1Y && ballY < player1Y + PADDLE_HEIGHT) {
		  ballSpeedX = -ballSpeedX;
		} else {
		  resetBall();
		}
	  }
	  // Collision with right paddle (Player 2)
	  if (ballX > canvas.width - PADDLE_WIDTH) {
		if (ballY > player2Y && ballY < player2Y + PADDLE_HEIGHT) {
		  ballSpeedX = -ballSpeedX;
		} else {
		  resetBall();
		}
	  }
	}
  
	function draw() {
	  ctx.fillStyle = "#000";
	  ctx.fillRect(0, 0, canvas.width, canvas.height);
	  ctx.fillStyle = "#fff";
	  ctx.fillRect(0, player1Y, PADDLE_WIDTH, PADDLE_HEIGHT);
	  ctx.fillRect(canvas.width - PADDLE_WIDTH, player2Y, PADDLE_WIDTH, PADDLE_HEIGHT);
	  ctx.beginPath();
	  ctx.arc(ballX, ballY, BALL_RADIUS, 0, Math.PI * 2);
	  ctx.fillStyle = "#ff0";
	  ctx.fill();
	}
  
	function resetBall() {
	  ballX = canvas.width / 2;
	  ballY = canvas.height / 2;
	  ballSpeedX = -ballSpeedX;
	  ballSpeedY = 3;
	}
  
	requestAnimationFrame(gameLoop);
  </script>
  